name: Build Main

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 20 1 * *'

jobs:
  build_and_test:
    name: "Build and Test"
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'maven'
          
    - name: Build uber-jar
      run: ./mvnw package -Dquarkus.package.type=uber-jar

    - name: Archive uber-jar
      uses: actions/upload-artifact@v3
      with:
        name: fatjar
        path: target/international-*-SNAPSHOT-runner.jar
        
    - name: Build regular jar
      run: ./mvnw package
      
    - name: Archive regular jar
      uses: actions/upload-artifact@v3
      with:
        name: quarkusApp
        path: target/quarkus-app

  buildDockerImage:
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Prepare
      id: prep
      run: |
        DOCKER_IMAGE=ghcr.io/${{ github.repository }}/quarkus
        VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
        TAGS="${DOCKER_IMAGE,,}:${VERSION},${DOCKER_IMAGE,,}:sha-${GITHUB_SHA::8}"
        echo "tags=${TAGS}" >> $GITHUB_OUTPUT
        echo "created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT }}

    - name: Download quarkusApp
      uses: actions/download-artifact@v3
      with:
        name: quarkusApp
        path: target/quarkus-app

    - name: Build container
      uses: docker/build-push-action@v4
      with:
        context: .
        file: src/main/docker/Dockerfile.jvm
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.prep.outputs.tags }}
        provenance: false
        labels: |
          org.opencontainers.image.source=${{ github.event.repository.html_url }}
          org.opencontainers.image.created=${{ steps.prep.outputs.created }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.source=https://github.com/patrickuhlmann/cevi-int
          org.opencontainers.image.description=Cevi.tools International Webpage
          org.opencontainers.image.license=MIT

  buildCeviTool:
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Prepare
      id: prep
      run: |
        DOCKER_IMAGE=registry.cevi.tools/cevi/international
        VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
        TAGS="${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
        echo "tags=${TAGS}" >> $GITHUB_OUTPUT
        echo "created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Cevi Tools Container Registry
      uses: docker/login-action@v2
      with:
        registry: registry.cevi.tools
        username: ${{ secrets.TOOLS_USERNAME }}
        password: ${{ secrets.TOOLS_PASSWORD }}

    - name: Download quarkusApp
      uses: actions/download-artifact@v3
      with:
        name: quarkusApp
        path: target/quarkus-app

    - name: Build container
      uses: docker/build-push-action@v4
      with:
        context: .
        file: src/main/docker/Dockerfile.jvm
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.prep.outputs.tags }}
        provenance: false
        labels: |
          org.opencontainers.image.source=${{ github.event.repository.html_url }}
          org.opencontainers.image.created=${{ steps.prep.outputs.created }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.source=https://github.com/patrickuhlmann/cevi-int
          org.opencontainers.image.description=Cevi.tools International Webpage
          org.opencontainers.image.license=MIT
